Terminals unused in grammar

   FOR
   AND
   OR
   NOT
   LSB
   RSB
   B_CONST


State 28 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: external_stat program
    2        | %empty

    3 external_stat: declaration SEMICOLON
    4              | func_def

    5 func_def: type ID LB arguments RB compound_stat

    6 arguments: type ID arguments
    7          | COMMA type ID arguments
    8          | %empty

    9 input_argu: value input_argu
   10           | COMMA value input_argu
   11           | %empty

   12 compound_stat: LCB statments end_stat RCB
   13              | SEMICOLON

   14 end_stat: RETURN value SEMICOLON
   15         | %empty

   16 statments: stat statments
   17          | %empty

   18 stat: declaration SEMICOLON
   19     | ID equal_rhs SEMICOLON
   20     | WHILE LB condition RB compound_stat
   21     | IF LB condition RB compound_stat else_scope
   22     | PRINT LB print_word RB SEMICOLON
   23     | value postfix SEMICOLON
   24     | ID LB input_argu RB SEMICOLON

   25 else_scope: ELSE compound_stat
   26           | %empty

   27 print_word: ID
   28           | STR_CONST

   29 condition: value
   30          | %empty

   31 comparison: EQ value
   32           | ML value
   33           | LT value
   34           | MLE value
   35           | LTE value
   36           | NE value

   37 declaration: type ID equal_rhs

   38 equal_rhs: '=' value
   39          | ADDASGN value
   40          | SUBASGN value
   41          | MULASGN value
   42          | DIVASGN value
   43          | MODASGN value
   44          | %empty

   45 value: I_CONST
   46      | F_CONST
   47      | value after_value
   48      | LB value RB
   49      | ID function_call
   50      | T
   51      | F

   52 function_call: LB input_argu RB
   53              | %empty

   54 after_value: expression
   55            | comparison

   56 postfix: INC
   57        | DEC

   58 expression: '+' value
   59           | '-' value
   60           | '*' value
   61           | '/' value
   62           | '%' value

   63 type: INT
   64     | FLOAT
   65     | BOOL
   66     | STRING
   67     | VOID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 62
'*' (42) 60
'+' (43) 58
'-' (45) 59
'/' (47) 61
'=' (61) 38
error (256)
RETURN (258) 14
ADDASGN (259) 39
SUBASGN (260) 40
MULASGN (261) 41
DIVASGN (262) 42
MODASGN (263) 43
PRINT (264) 22
IF (265) 21
ELSE (266) 25
FOR (267)
WHILE (268) 20
T (269) 50
F (270) 51
SEMICOLON (271) 3 13 14 18 19 22 23 24
EQ (272) 31
NE (273) 36
LT (274) 33
LTE (275) 35
ML (276) 32
MLE (277) 34
AND (278)
OR (279)
NOT (280)
LB (281) 5 20 21 22 24 48 52
RB (282) 5 20 21 22 24 48 52
LCB (283) 12
RCB (284) 12
LSB (285)
RSB (286)
COMMA (287) 7 10
INC (288) 56
DEC (289) 57
I_CONST (290) 45
F_CONST (291) 46
B_CONST (292)
STR_CONST (293) 28
ID (294) 5 6 7 19 24 27 37 49
VOID (295) 67
INT (296) 63
FLOAT (297) 64
STRING (298) 66
BOOL (299) 65


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 1
external_stat (53)
    on left: 3 4, on right: 1
func_def (54)
    on left: 5, on right: 4
arguments (55)
    on left: 6 7 8, on right: 5 6 7
input_argu (56)
    on left: 9 10 11, on right: 9 10 24 52
compound_stat (57)
    on left: 12 13, on right: 5 20 21 25
end_stat (58)
    on left: 14 15, on right: 12
statments (59)
    on left: 16 17, on right: 12 16
stat (60)
    on left: 18 19 20 21 22 23 24, on right: 16
else_scope (61)
    on left: 25 26, on right: 21
print_word (62)
    on left: 27 28, on right: 22
condition (63)
    on left: 29 30, on right: 20 21
comparison (64)
    on left: 31 32 33 34 35 36, on right: 55
declaration (65)
    on left: 37, on right: 3 18
equal_rhs (66)
    on left: 38 39 40 41 42 43 44, on right: 19 37
value (67)
    on left: 45 46 47 48 49 50 51, on right: 9 10 14 23 29 31 32 33
    34 35 36 38 39 40 41 42 43 47 48 58 59 60 61 62
function_call (68)
    on left: 52 53, on right: 49
after_value (69)
    on left: 54 55, on right: 47
postfix (70)
    on left: 56 57, on right: 23
expression (71)
    on left: 58 59 60 61 62, on right: 54
type (72)
    on left: 63 64 65 66 67, on right: 5 6 7 37


State 0

    0 $accept: . program $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 2 (program)

    program        go to state 6
    external_stat  go to state 7
    func_def       go to state 8
    declaration    go to state 9
    type           go to state 10


State 1

   67 type: VOID .

    $default  reduce using rule 67 (type)


State 2

   63 type: INT .

    $default  reduce using rule 63 (type)


State 3

   64 type: FLOAT .

    $default  reduce using rule 64 (type)


State 4

   66 type: STRING .

    $default  reduce using rule 66 (type)


State 5

   65 type: BOOL .

    $default  reduce using rule 65 (type)


State 6

    0 $accept: program . $end

    $end  shift, and go to state 11


State 7

    1 program: external_stat . program

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 2 (program)

    program        go to state 12
    external_stat  go to state 7
    func_def       go to state 8
    declaration    go to state 9
    type           go to state 10


State 8

    4 external_stat: func_def .

    $default  reduce using rule 4 (external_stat)


State 9

    3 external_stat: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 13


State 10

    5 func_def: type . ID LB arguments RB compound_stat
   37 declaration: type . ID equal_rhs

    ID  shift, and go to state 14


State 11

    0 $accept: program $end .

    $default  accept


State 12

    1 program: external_stat program .

    $default  reduce using rule 1 (program)


State 13

    3 external_stat: declaration SEMICOLON .

    $default  reduce using rule 3 (external_stat)


State 14

    5 func_def: type ID . LB arguments RB compound_stat
   37 declaration: type ID . equal_rhs

    '='      shift, and go to state 15
    ADDASGN  shift, and go to state 16
    SUBASGN  shift, and go to state 17
    MULASGN  shift, and go to state 18
    DIVASGN  shift, and go to state 19
    MODASGN  shift, and go to state 20
    LB       shift, and go to state 21

    $default  reduce using rule 44 (equal_rhs)

    equal_rhs  go to state 22


State 15

   38 equal_rhs: '=' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 29


State 16

   39 equal_rhs: ADDASGN . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 30


State 17

   40 equal_rhs: SUBASGN . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 31


State 18

   41 equal_rhs: MULASGN . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 32


State 19

   42 equal_rhs: DIVASGN . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 33


State 20

   43 equal_rhs: MODASGN . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 34


State 21

    5 func_def: type ID LB . arguments RB compound_stat

    COMMA   shift, and go to state 35
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 8 (arguments)

    arguments  go to state 36
    type       go to state 37


State 22

   37 declaration: type ID equal_rhs .

    $default  reduce using rule 37 (declaration)


State 23

   50 value: T .

    $default  reduce using rule 50 (value)


State 24

   51 value: F .

    $default  reduce using rule 51 (value)


State 25

   48 value: LB . value RB

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 38


State 26

   45 value: I_CONST .

    $default  reduce using rule 45 (value)


State 27

   46 value: F_CONST .

    $default  reduce using rule 46 (value)


State 28

   49 value: ID . function_call

    LB  shift, and go to state 39

    LB        [reduce using rule 53 (function_call)]
    $default  reduce using rule 53 (function_call)

    function_call  go to state 40


State 29

   38 equal_rhs: '=' value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 38 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 30

   39 equal_rhs: ADDASGN value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 39 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 31

   40 equal_rhs: SUBASGN value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 40 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 32

   41 equal_rhs: MULASGN value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 41 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 33

   42 equal_rhs: DIVASGN value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 42 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 34

   43 equal_rhs: MODASGN value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 43 (equal_rhs)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 35

    7 arguments: COMMA . type ID arguments

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    type  go to state 55


State 36

    5 func_def: type ID LB arguments . RB compound_stat

    RB  shift, and go to state 56


State 37

    6 arguments: type . ID arguments

    ID  shift, and go to state 57


State 38

   47 value: value . after_value
   48      | LB value . RB

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    RB   shift, and go to state 58

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 39

   52 function_call: LB . input_argu RB

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    COMMA    shift, and go to state 59
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 11 (input_argu)

    input_argu  go to state 60
    value       go to state 61


State 40

   49 value: ID function_call .

    $default  reduce using rule 49 (value)


State 41

   31 comparison: EQ . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 62


State 42

   36 comparison: NE . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 63


State 43

   33 comparison: LT . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 64


State 44

   35 comparison: LTE . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 65


State 45

   32 comparison: ML . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 66


State 46

   34 comparison: MLE . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 67


State 47

   58 expression: '+' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 68


State 48

   59 expression: '-' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 69


State 49

   60 expression: '*' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 70


State 50

   61 expression: '/' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 71


State 51

   62 expression: '%' . value

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 72


State 52

   55 after_value: comparison .

    $default  reduce using rule 55 (after_value)


State 53

   47 value: value after_value .

    $default  reduce using rule 47 (value)


State 54

   54 after_value: expression .

    $default  reduce using rule 54 (after_value)


State 55

    7 arguments: COMMA type . ID arguments

    ID  shift, and go to state 73


State 56

    5 func_def: type ID LB arguments RB . compound_stat

    SEMICOLON  shift, and go to state 74
    LCB        shift, and go to state 75

    compound_stat  go to state 76


State 57

    6 arguments: type ID . arguments

    COMMA   shift, and go to state 35
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 8 (arguments)

    arguments  go to state 77
    type       go to state 37


State 58

   48 value: LB value RB .

    $default  reduce using rule 48 (value)


State 59

   10 input_argu: COMMA . value input_argu

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 78


State 60

   52 function_call: LB input_argu . RB

    RB  shift, and go to state 79


State 61

    9 input_argu: value . input_argu
   47 value: value . after_value

    T        shift, and go to state 23
    F        shift, and go to state 24
    EQ       shift, and go to state 41
    NE       shift, and go to state 42
    LT       shift, and go to state 43
    LTE      shift, and go to state 44
    ML       shift, and go to state 45
    MLE      shift, and go to state 46
    '+'      shift, and go to state 47
    '-'      shift, and go to state 48
    '*'      shift, and go to state 49
    '/'      shift, and go to state 50
    '%'      shift, and go to state 51
    LB       shift, and go to state 25
    COMMA    shift, and go to state 59
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 11 (input_argu)

    input_argu   go to state 80
    comparison   go to state 52
    value        go to state 61
    after_value  go to state 53
    expression   go to state 54


State 62

   31 comparison: EQ value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 31 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 63

   36 comparison: NE value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 36 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 64

   33 comparison: LT value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 33 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 65

   35 comparison: LTE value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 35 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 66

   32 comparison: ML value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 32 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 67

   34 comparison: MLE value .
   47 value: value . after_value

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 34 (comparison)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 68

   47 value: value . after_value
   58 expression: '+' value .

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 58 (expression)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 69

   47 value: value . after_value
   59 expression: '-' value .

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 59 (expression)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 70

   47 value: value . after_value
   60 expression: '*' value .

    $default  reduce using rule 60 (expression)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 71

   47 value: value . after_value
   61 expression: '/' value .

    $default  reduce using rule 61 (expression)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 72

   47 value: value . after_value
   62 expression: '%' value .

    $default  reduce using rule 62 (expression)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 73

    7 arguments: COMMA type ID . arguments

    COMMA   shift, and go to state 35
    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRING  shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 8 (arguments)

    arguments  go to state 81
    type       go to state 37


State 74

   13 compound_stat: SEMICOLON .

    $default  reduce using rule 13 (compound_stat)


State 75

   12 compound_stat: LCB . statments end_stat RCB

    PRINT    shift, and go to state 82
    IF       shift, and go to state 83
    WHILE    shift, and go to state 84
    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 85
    VOID     shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    STRING   shift, and go to state 4
    BOOL     shift, and go to state 5

    $default  reduce using rule 17 (statments)

    statments    go to state 86
    stat         go to state 87
    declaration  go to state 88
    value        go to state 89
    type         go to state 90


State 76

    5 func_def: type ID LB arguments RB compound_stat .

    $default  reduce using rule 5 (func_def)


State 77

    6 arguments: type ID arguments .

    $default  reduce using rule 6 (arguments)


State 78

   10 input_argu: COMMA value . input_argu
   47 value: value . after_value

    T        shift, and go to state 23
    F        shift, and go to state 24
    EQ       shift, and go to state 41
    NE       shift, and go to state 42
    LT       shift, and go to state 43
    LTE      shift, and go to state 44
    ML       shift, and go to state 45
    MLE      shift, and go to state 46
    '+'      shift, and go to state 47
    '-'      shift, and go to state 48
    '*'      shift, and go to state 49
    '/'      shift, and go to state 50
    '%'      shift, and go to state 51
    LB       shift, and go to state 25
    COMMA    shift, and go to state 59
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 11 (input_argu)

    input_argu   go to state 91
    comparison   go to state 52
    value        go to state 61
    after_value  go to state 53
    expression   go to state 54


State 79

   52 function_call: LB input_argu RB .

    $default  reduce using rule 52 (function_call)


State 80

    9 input_argu: value input_argu .

    $default  reduce using rule 9 (input_argu)


State 81

    7 arguments: COMMA type ID arguments .

    $default  reduce using rule 7 (arguments)


State 82

   22 stat: PRINT . LB print_word RB SEMICOLON

    LB  shift, and go to state 92


State 83

   21 stat: IF . LB condition RB compound_stat else_scope

    LB  shift, and go to state 93


State 84

   20 stat: WHILE . LB condition RB compound_stat

    LB  shift, and go to state 94


State 85

   19 stat: ID . equal_rhs SEMICOLON
   24     | ID . LB input_argu RB SEMICOLON
   49 value: ID . function_call

    '='      shift, and go to state 15
    ADDASGN  shift, and go to state 16
    SUBASGN  shift, and go to state 17
    MULASGN  shift, and go to state 18
    DIVASGN  shift, and go to state 19
    MODASGN  shift, and go to state 20
    LB       shift, and go to state 95

    SEMICOLON  reduce using rule 44 (equal_rhs)
    $default   reduce using rule 53 (function_call)

    equal_rhs      go to state 96
    function_call  go to state 40


State 86

   12 compound_stat: LCB statments . end_stat RCB

    RETURN  shift, and go to state 97

    $default  reduce using rule 15 (end_stat)

    end_stat  go to state 98


State 87

   16 statments: stat . statments

    PRINT    shift, and go to state 82
    IF       shift, and go to state 83
    WHILE    shift, and go to state 84
    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 85
    VOID     shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    STRING   shift, and go to state 4
    BOOL     shift, and go to state 5

    $default  reduce using rule 17 (statments)

    statments    go to state 99
    stat         go to state 87
    declaration  go to state 88
    value        go to state 89
    type         go to state 90


State 88

   18 stat: declaration . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 89

   23 stat: value . postfix SEMICOLON
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    INC  shift, and go to state 101
    DEC  shift, and go to state 102

    comparison   go to state 52
    after_value  go to state 53
    postfix      go to state 103
    expression   go to state 54


State 90

   37 declaration: type . ID equal_rhs

    ID  shift, and go to state 104


State 91

   10 input_argu: COMMA value input_argu .

    $default  reduce using rule 10 (input_argu)


State 92

   22 stat: PRINT LB . print_word RB SEMICOLON

    STR_CONST  shift, and go to state 105
    ID         shift, and go to state 106

    print_word  go to state 107


State 93

   21 stat: IF LB . condition RB compound_stat else_scope

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 30 (condition)

    condition  go to state 108
    value      go to state 109


State 94

   20 stat: WHILE LB . condition RB compound_stat

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 30 (condition)

    condition  go to state 110
    value      go to state 109


State 95

   24 stat: ID LB . input_argu RB SEMICOLON
   52 function_call: LB . input_argu RB

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    COMMA    shift, and go to state 59
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    $default  reduce using rule 11 (input_argu)

    input_argu  go to state 111
    value       go to state 61


State 96

   19 stat: ID equal_rhs . SEMICOLON

    SEMICOLON  shift, and go to state 112


State 97

   14 end_stat: RETURN . value SEMICOLON

    T        shift, and go to state 23
    F        shift, and go to state 24
    LB       shift, and go to state 25
    I_CONST  shift, and go to state 26
    F_CONST  shift, and go to state 27
    ID       shift, and go to state 28

    value  go to state 113


State 98

   12 compound_stat: LCB statments end_stat . RCB

    RCB  shift, and go to state 114


State 99

   16 statments: stat statments .

    $default  reduce using rule 16 (statments)


State 100

   18 stat: declaration SEMICOLON .

    $default  reduce using rule 18 (stat)


State 101

   56 postfix: INC .

    $default  reduce using rule 56 (postfix)


State 102

   57 postfix: DEC .

    $default  reduce using rule 57 (postfix)


State 103

   23 stat: value postfix . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 104

   37 declaration: type ID . equal_rhs

    '='      shift, and go to state 15
    ADDASGN  shift, and go to state 16
    SUBASGN  shift, and go to state 17
    MULASGN  shift, and go to state 18
    DIVASGN  shift, and go to state 19
    MODASGN  shift, and go to state 20

    $default  reduce using rule 44 (equal_rhs)

    equal_rhs  go to state 22


State 105

   28 print_word: STR_CONST .

    $default  reduce using rule 28 (print_word)


State 106

   27 print_word: ID .

    $default  reduce using rule 27 (print_word)


State 107

   22 stat: PRINT LB print_word . RB SEMICOLON

    RB  shift, and go to state 116


State 108

   21 stat: IF LB condition . RB compound_stat else_scope

    RB  shift, and go to state 117


State 109

   29 condition: value .
   47 value: value . after_value

    EQ   shift, and go to state 41
    NE   shift, and go to state 42
    LT   shift, and go to state 43
    LTE  shift, and go to state 44
    ML   shift, and go to state 45
    MLE  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51

    $default  reduce using rule 29 (condition)

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 110

   20 stat: WHILE LB condition . RB compound_stat

    RB  shift, and go to state 118


State 111

   24 stat: ID LB input_argu . RB SEMICOLON
   52 function_call: LB input_argu . RB

    RB  shift, and go to state 119


State 112

   19 stat: ID equal_rhs SEMICOLON .

    $default  reduce using rule 19 (stat)


State 113

   14 end_stat: RETURN value . SEMICOLON
   47 value: value . after_value

    SEMICOLON  shift, and go to state 120
    EQ         shift, and go to state 41
    NE         shift, and go to state 42
    LT         shift, and go to state 43
    LTE        shift, and go to state 44
    ML         shift, and go to state 45
    MLE        shift, and go to state 46
    '+'        shift, and go to state 47
    '-'        shift, and go to state 48
    '*'        shift, and go to state 49
    '/'        shift, and go to state 50
    '%'        shift, and go to state 51

    comparison   go to state 52
    after_value  go to state 53
    expression   go to state 54


State 114

   12 compound_stat: LCB statments end_stat RCB .

    $default  reduce using rule 12 (compound_stat)


State 115

   23 stat: value postfix SEMICOLON .

    $default  reduce using rule 23 (stat)


State 116

   22 stat: PRINT LB print_word RB . SEMICOLON

    SEMICOLON  shift, and go to state 121


State 117

   21 stat: IF LB condition RB . compound_stat else_scope

    SEMICOLON  shift, and go to state 74
    LCB        shift, and go to state 75

    compound_stat  go to state 122


State 118

   20 stat: WHILE LB condition RB . compound_stat

    SEMICOLON  shift, and go to state 74
    LCB        shift, and go to state 75

    compound_stat  go to state 123


State 119

   24 stat: ID LB input_argu RB . SEMICOLON
   52 function_call: LB input_argu RB .

    SEMICOLON  shift, and go to state 124

    $default  reduce using rule 52 (function_call)


State 120

   14 end_stat: RETURN value SEMICOLON .

    $default  reduce using rule 14 (end_stat)


State 121

   22 stat: PRINT LB print_word RB SEMICOLON .

    $default  reduce using rule 22 (stat)


State 122

   21 stat: IF LB condition RB compound_stat . else_scope

    ELSE  shift, and go to state 125

    $default  reduce using rule 26 (else_scope)

    else_scope  go to state 126


State 123

   20 stat: WHILE LB condition RB compound_stat .

    $default  reduce using rule 20 (stat)


State 124

   24 stat: ID LB input_argu RB SEMICOLON .

    $default  reduce using rule 24 (stat)


State 125

   25 else_scope: ELSE . compound_stat

    SEMICOLON  shift, and go to state 74
    LCB        shift, and go to state 75

    compound_stat  go to state 127


State 126

   21 stat: IF LB condition RB compound_stat else_scope .

    $default  reduce using rule 21 (stat)


State 127

   25 else_scope: ELSE compound_stat .

    $default  reduce using rule 25 (else_scope)
